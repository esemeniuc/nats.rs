name: ci

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  RUSTFLAGS: "-D warnings"

defaults:
  run:
    shell: bash

jobs:
  test_matrix:
    name: test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Cache rust
        uses: actions/cache@v3
        env:
          cache-name: cache-rust
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.toml') }}

      - name: Cache go
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod              # Module download cache
            ~/.cache/go-build         # Build cache (Linux)
            ~/Library/Caches/go-build # Build cache (Mac)
            '%LocalAppData%\go-build' # Build cache (Windows)
          key: ${{ runner.os }}-go-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Install nats-server
        run: go get github.com/nats-io/nats-server/v2

      - name: Configure nats hosts
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "127.0.0.1 demo.nats.io" >> "C:\\Windows\\System32\\drivers\\etc\\hosts"
            cmd "/c ipconfig /flushdns"
          else
            echo "127.0.0.1 demo.nats.io" | sudo tee -a /etc/hosts
          fi

      - name: Run tests
        env:
          RUST_BACKTRACE: 1
        run: |
          rustup update
          nats-server --jetstream --port=4222 &
          cargo test --features=unstable pull_stream_with_timeout  -- --nocapture


